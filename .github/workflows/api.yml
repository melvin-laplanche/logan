name: api
on: [push]
jobs:
  go-vulnerabilities-scan:
    name: "Golang Vulnerabilities Scan"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - name: Generate go.list
        working-directory: ./go
        run: go list -json -m all > ../go.list
      - name: Run Nancy
        uses: sonatype-nexus-community/nancy-github-action@main

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v1
        with:
          version: v1.30
          working-directory: ./go

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2

      - name: Build
        working-directory: ./go
        run: go build -race ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Download Code climate code coverage reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

      - name: initialize reporter
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          GIT_COMMIT_SHA: ${{ github.sha }}
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
        run: ./cc-test-reporter before-build

      - name: Runs tests
        working-directory: ./go
        run: go test -race -coverprofile ../c.out ./...

      - name: Report coverage
        if: always()
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          GIT_COMMIT_SHA: ${{ github.sha }}
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
        run: ./cc-test-reporter after-build
